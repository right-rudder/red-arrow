---
const startDate = new Date();
startDate.setDate(startDate.getDate() + 5);

const datesArray: Date[] = [];
for (let i = 0; i < 15; i++) {
  const currentDate = new Date(startDate);
  currentDate.setDate(currentDate.getDate() + i);
  datesArray.push(currentDate);
}
---

<form
  id="discoveryForm"
  method="POST"
  onsubmit="validateForm(this);"
  data-astro-reload
>
  <div class="tab">
    <p>
      <input
        required
        placeholder="First name"
        type="text"
        name="first-name"
        id="first-name"
        autocomplete="given-name"
      />
    </p>
    <p>
      <input
        required
        placeholder="Last name"
        type="text"
        name="last-name"
        id="last-name"
        autocomplete="family-name"
      />
    </p>
    <p>
      <input
        required
        placeholder="E-mail"
        type="email"
        name="email"
        id="email"
        autocomplete="email"
      />
    </p>

    <p class="ohno">
      <label>
        Don't fill this out if you're human: <input name="confirm-email" />
      </label>
    </p>

    <p>
      <input
        required
        placeholder="Phone"
        type="tel"
        name="phone-number"
        id="phone-number"
        autocomplete="tel"
      />
    </p>

    <div class="pt-5">
      <h2 class="text-sm font-medium leading-6 text-gray-900">
        Select discovery flight date
      </h2>

      <fieldset class="mt-2">
        <legend class="sr-only">Select discovery flight date</legend>
        <div class="grid grid-cols-3 gap-3 sm:grid-cols-5">
          {
            datesArray.map((date, index) => (
              <label class="daylabels flex items-center justify-center rounded-md py-3 px-3 text-sm font-semibold uppercase sm:flex-1 cursor-pointer ring-1 focus:outline-none hover:ring-2 ring-main-red hover:ring-offset-2">
                <input
                  type="radio"
                  name="day-option"
                  value={date.toLocaleDateString("en-US", {
                    month: "short",
                    day: "numeric",
                  })}
                  class="sr-only"
                  aria-labelledby={`day-option-${index}-label`}
                />
                <span id={`day-option-${index}-label`}>
                  {date.toLocaleDateString("en-US", {
                    month: "short",
                    day: "numeric",
                  })}
                </span>
              </label>
            ))
          }
        </div>
      </fieldset>
    </div>

    <div class="pt-5">
      <h2 class="text-sm font-medium leading-6 text-gray-900">
        Select discovery flight time
      </h2>

      <fieldset class="mt-2">
        <legend class="sr-only">Select discovery flight time</legend>
        <div class="grid grid-cols-2 gap-3 sm:grid-cols-4">
          <label
            class="timelabels flex items-center justify-center rounded-md py-3 px-3 text-sm font-semibold uppercase sm:flex-1 cursor-pointer focus:outline-none ring-1 hover:ring-2 ring-main-red hover:ring-offset-2"
          >
            <input
              type="radio"
              name="time-option"
              value="7AM - 10AM"
              class="sr-only"
              aria-labelledby="time-option-0-label"
            />
            <span id="time-option-0-label">7AM - 10AM</span>
          </label>

          <label
            class="timelabels flex items-center justify-center rounded-md py-3 px-3 text-sm font-semibold uppercase sm:flex-1 cursor-pointer focus:outline-none ring-1 hover:ring-2 ring-main-red hover:ring-offset-2"
          >
            <input
              type="radio"
              name="time-option"
              value="10AM - 1PM"
              class="sr-only"
              aria-labelledby="time-option-1-label"
            />
            <span id="time-option-1-label">10AM - 1PM</span>
          </label>
          <label
            class="timelabels flex items-center justify-center rounded-md py-3 px-3 text-sm font-semibold uppercase sm:flex-1 cursor-pointer focus:outline-none ring-1 hover:ring-2 ring-main-red hover:ring-offset-2"
          >
            <input
              type="radio"
              name="time-option"
              value="1PM - 4PM"
              class="sr-only"
              aria-labelledby="time-option-1-label"
            />
            <span id="time-option-1-label">1PM - 4PM</span>
          </label>
          <label
            class="timelabels flex items-center justify-center rounded-md py-3 px-3 text-sm font-semibold uppercase sm:flex-1 cursor-pointer focus:outline-none ring-1 hover:ring-2 ring-main-red hover:ring-offset-2"
          >
            <input
              type="radio"
              name="time-option"
              value="4PM - 7PM"
              class="sr-only"
              aria-labelledby="time-option-1-label"
            />
            <span id="time-option-1-label">4PM - 7PM</span>
          </label>
        </div>
      </fieldset>
    </div>
  </div>
</form>

<div class="btn-red mt-5 ml-auto">
  <button type="submit">Submit</button>
</div>

<script>
  (window as any).validateForm = validateForm;
  function validateForm(form) {
    var x = document.forms["discoveryForm"]["confirm-email"].value;
    if (x == "" || x == null) {
      // if the honeypot was ignored, it's a hu-mon
      form.action =
        "https://services.leadconnectorhq.com/hooks/6Qxcfy0WWndWLURxYvBB/webhook-trigger/82224472-6bdb-4a5b-8bce-ac984d058d62"; // link to process form and redirect to thank you
    } else {
      // the honeypot was filled in, it's a robot
      form.action = "https://flyredarrow.com/enroll-confirmation"; // link directly to thank you without actually processing form
      return false;
    }
  }

  const dayRadioButtons = document.querySelectorAll(
    'input[type="radio"][name="day-option"]',
  );

  dayRadioButtons.forEach((radioButton) => {
    radioButton.addEventListener("change", function () {
      const labels = document.querySelectorAll(".daylabels");
      labels.forEach((label) => {
        label.classList.remove("bg-red-200", "hover:bg-main-red");
      });

      const selectedLabel = this.parentNode;
      selectedLabel.classList.add("bg-red-200", "hover:bg-main-red");
    });
  });

  const timeRadioButtons = document.querySelectorAll(
    'input[type="radio"][name="time-option"]',
  );
  timeRadioButtons.forEach((radioButton) => {
    radioButton.addEventListener("change", function () {
      const labels = document.querySelectorAll(".timelabels");
      labels.forEach((label) => {
        label.classList.remove("bg-red-200", "hover:bg-main-red");
      });

      const selectedLabel = this.parentNode;
      selectedLabel.classList.add("bg-red-200", "hover:bg-main-red");
    });
  });
</script>

<style>
  .ohno {
    @apply hidden;
  }

  input,
  textarea {
    @apply my-3 border py-2 pl-3 rounded-md w-full ring-0 outline-none focus:border-main-red;
  }

  #discoveryForm {
    @apply m-0;
  }

  /* @layer components in the global css file not loading this class.. :/ */
  .btn-red {
    @apply w-min whitespace-nowrap text-center text-lg bg-main-red text-white px-5 py-3 rounded-md uppercase font-semibold hover:scale-105 hover:shadow-xl duration-200 hover:bg-red-800;
  }
</style>
