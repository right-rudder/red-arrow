---
import StudentLayout from "../layouts/StudentLayout.astro";
import StudentLogin from "../components/StudentLogin.astro";
---

<StudentLayout pageTitle="Register">
  <StudentLogin>
    <h1 class="text-5xl font-semibold uppercase">Register</h1>

    <form class="flex flex-col p-5 gap-2" id="registration-form">
      <label class="font-semibold" for="name">Name</label>
      <input
        class="border border-black p-2 text-black rounded-sm"
        type="text"
        name="name"
        id="name"
        required
      />
      <label class="font-semibold" for="email">Email</label>
      <input
        class="border border-black p-2 text-black rounded-sm"
        type="email"
        name="email"
        id="email"
        required
      />
      <label class="font-semibold" for="password">Password</label>
      <input
        class="border border-black p-2 text-black rounded-sm"
        type="password"
        name="password"
        id="password"
        required
      />
      <button type="submit" class="bg-main-red p-3 font-semibold rounded-sm"
        >Register</button
      >
      <p class="text-red-600 text-xs max-w-36 mx-auto" id="error-message"></p>
    </form>
    <p>
      Already have an account? <a href="/signin" class="hover:underline"
        >Sign in</a
      >
    </p>
  </StudentLogin>
</StudentLayout>

<script>
  import {
    getAuth,
    createUserWithEmailAndPassword,
    updateProfile,
  } from "firebase/auth";
  import { app } from "../firebase/client";
  const auth = getAuth(app);

  auth.onAuthStateChanged((user) => {
    if (user) {
      window.location.href = "/dashboard";
    }
  });

  const handleRegistration = async (event) => {
    event.preventDefault();

    const form = event.target;
    const formData = new FormData(form);
    const email = formData.get("email") as string;
    const password = formData.get("password") as string;
    const name = formData.get("name") as string;

    try {
      await createUserWithEmailAndPassword(auth, email, password)
        .then(async (userCredential) => {
          await updateProfile(userCredential.user, { displayName: name });
          window.location.href = "/dashboard";
        })
        .catch((error) => {
          const errorMessage = error.message;
          const errorElement = document.getElementById(
            "error-message",
          ) as HTMLParagraphElement;
          errorElement.textContent = errorMessage;
        });
    } catch (error) {
      console.error("Registration failed:", error.message);
    }
  };

  const form = document.getElementById("registration-form") as HTMLFormElement;
  form.addEventListener("submit", handleRegistration);
</script>
